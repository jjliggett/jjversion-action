name: "jjversion-action"
description: "Creates a version for the repository using jjversion"
author: "jjliggett"
branding:
  icon: "tag"
  color: "blue"
outputs:
  major:
    description: "Major version"
    value: ${{ steps.jjversion.outputs.major }}
  minor:
    description: "Minor version" 
    value: ${{ steps.jjversion.outputs.minor }}
  patch:
    description: "Patch version"
    value: ${{ steps.jjversion.outputs.patch }}
  majorMinorPatch:
    description: "MajorMinorPatch version"
    value: ${{ steps.jjversion.outputs.majorMinorPatch }}
  sha:
    description: "Commit Sha"
    value: ${{ steps.jjversion.outputs.sha }}
  shortSha:
    description: "ShortSha"
    value: ${{ steps.jjversion.outputs.shortSha }}

runs:
  using: "composite"
  steps:
    - run: echo $env:RUNNER_OS
      shell: pwsh
    - run: |
        if ($env:RUNNER_OS -eq "Windows")
        {
          curl https://github.com/jjliggett/jjversion-gha-output/releases/download/v0.2.2/jjversion-ghao.exe -L --output jjversion-gha-output.exe
        } elseif ($env:RUNNER_OS -eq "macOS")
        {
          curl https://github.com/jjliggett/jjversion-gha-output/releases/download/v0.2.2/jjversion-ghao-darwin -L --output jjversion-gha-output
          chmod +x jjversion-gha-output
        } else {
          curl https://github.com/jjliggett/jjversion-gha-output/releases/download/v0.2.2/jjversion-ghao -L --output jjversion-gha-output
          chmod +x jjversion-gha-output
        }
      shell: pwsh
    - run: printenv
      shell: pwsh
    - run: ls
      shell: pwsh
    - run: |
        if ($env:RUNNER_OS -eq "Windows")
        {
          ./jjversion-gha-output.exe
        } else {
          ./jjversion-gha-output
        }
      id: jjversion
      shell: pwsh
    - name: Display version outputs
      run: |
        echo "Major: ${{ steps.jjversion.outputs.major }}"
        echo "Minor: ${{ steps.jjversion.outputs.minor }}"
        echo "Patch: ${{ steps.jjversion.outputs.patch }}"
        echo "MajorMinorPatch: ${{ steps.jjversion.outputs.majorMinorPatch }}"
        echo "Sha: ${{ steps.jjversion.outputs.sha }}"
        echo "ShortSha: ${{ steps.jjversion.outputs.shortSha }}"
      shell: pwsh
    - run: |
        if ($env:RUNNER_OS -eq "Windows")
        {
          rm ./jjversion-gha-output.exe
        } else {
          rm ./jjversion-gha-output
        }
      shell: pwsh
